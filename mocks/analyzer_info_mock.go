// Code generated by MockGen. DO NOT EDIT.
// Source: analyzers/schema/analyzer_info.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAnalyzerInfo is a mock of AnalyzerInfo interface.
type MockAnalyzerInfo struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyzerInfoMockRecorder
}

// MockAnalyzerInfoMockRecorder is the mock recorder for MockAnalyzerInfo.
type MockAnalyzerInfoMockRecorder struct {
	mock *MockAnalyzerInfo
}

// NewMockAnalyzerInfo creates a new mock instance.
func NewMockAnalyzerInfo(ctrl *gomock.Controller) *MockAnalyzerInfo {
	mock := &MockAnalyzerInfo{ctrl: ctrl}
	mock.recorder = &MockAnalyzerInfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalyzerInfo) EXPECT() *MockAnalyzerInfoMockRecorder {
	return m.recorder
}

// GetBody mocks base method.
func (m *MockAnalyzerInfo) GetBody() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBody")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBody indicates an expected call of GetBody.
func (mr *MockAnalyzerInfoMockRecorder) GetBody() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBody", reflect.TypeOf((*MockAnalyzerInfo)(nil).GetBody))
}

// GetHost mocks base method.
func (m *MockAnalyzerInfo) GetHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHost indicates an expected call of GetHost.
func (mr *MockAnalyzerInfoMockRecorder) GetHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHost", reflect.TypeOf((*MockAnalyzerInfo)(nil).GetHost))
}
