<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="40d09095-ac05-4541-95b6-cde6a4e81a9c" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.16.14" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectId" id="2FcWQegIEfHf469Hxr3mTcB0Slh" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.vendoring.notification.had.been.shown": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/udayanga/Downloads/Webpage Analyzer.drawio.png",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/frontend/firstapp" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/webpage-analyzer">
    <configuration name="go build github.com/webpage-analyzer" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="webpage-analyzer" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/webpage-analyzer" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_Analyze_FailurePath in github.com/naviud/webpage-analyzer/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="webpage-analyzer" />
      <working_directory value="$PROJECT_DIR$/test" />
      <kind value="PACKAGE" />
      <package value="github.com/naviud/webpage-analyzer/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_Analyze_FailurePath\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_Analyze_HappyPath in github.com/naviud/webpage-analyzer/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="webpage-analyzer" />
      <working_directory value="$PROJECT_DIR$/test" />
      <kind value="PACKAGE" />
      <package value="github.com/naviud/webpage-analyzer/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_Analyze_HappyPath\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_SetExtractTime_HappyPath in github.com/naviud/webpage-analyzer/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="webpage-analyzer" />
      <working_directory value="$PROJECT_DIR$/test" />
      <kind value="PACKAGE" />
      <package value="github.com/naviud/webpage-analyzer/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_SetExtractTime_HappyPath\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_SetServiceTime_HappyPath in github.com/naviud/webpage-analyzer/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="webpage-analyzer" />
      <working_directory value="$PROJECT_DIR$/test" />
      <kind value="PACKAGE" />
      <package value="github.com/naviud/webpage-analyzer/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_SetServiceTime_HappyPath\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="webpage-analyzer" />
      <working_directory value="$PROJECT_DIR$/test" />
      <kind value="DIRECTORY" />
      <package value="github.com/naviud/webpage-analyzer" />
      <directory value="$PROJECT_DIR$/test" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test test" />
        <item itemvalue="Go Test.Test_Analyze_FailurePath in github.com/naviud/webpage-analyzer/test" />
        <item itemvalue="Go Test.Test_Analyze_HappyPath in github.com/naviud/webpage-analyzer/test" />
        <item itemvalue="Go Test.Test_SetExtractTime_HappyPath in github.com/naviud/webpage-analyzer/test" />
        <item itemvalue="Go Test.Test_SetServiceTime_HappyPath in github.com/naviud/webpage-analyzer/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>false</integration-enabled>
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main.go</url>
          <line>63</line>
          <option name="timeStamp" value="88" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main.go</url>
          <line>25</line>
          <option name="timeStamp" value="89" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/webpage_analyzer$go_test_test.out" NAME="go test test Coverage Results" MODIFIED="1665349179649" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/webpage_analyzer$go_test_github_com_naviud_webpage_analyzer_test.out" NAME="go test github.com/naviud/webpage-analyzer/test Coverage Results" MODIFIED="1665355228587" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>